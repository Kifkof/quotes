@page "/"
@using quotes_web.Data
@using Microsoft.EntityFrameworkCore;
@inject QuotesContext QuotesContext
<AuthorizeView>
    <Authorized>
        <div>
            <EditForm Context="createQuoteCtx" Model="@quoteCreation" OnValidSubmit="@CreateQuote">
                <p>
                    <label for="q-text">Text: </label>
                    <InputText id="q-text" @bind-Value="quoteCreation.Text" />
                </p>
                <p>
                    <label for="classification">Author: </label>
                    <InputSelect id="classification" @bind-Value="quoteCreation.AuthorId">
                        @foreach (var author in QuotesContext.Authors!)
                        {
                            <option value="@author.Id">@author.Name</option>
                        }
                    </InputSelect>
                </p>
                <button type="submit">Submit</button>
            </EditForm>
            <EditForm Context="createAuthorCtx" Model="@authorCreation" OnValidSubmit="@CreateAuthor">
                <p>
                    <label for="a-text">Name: </label>
                    <InputText id="a-text" @bind-Value="authorCreation.Name" />
                </p>
                <button type="submit">Submit</button>
            </EditForm>
            <ul>
                @foreach (var quote in QuotesContext.Quotes!.Include(q=> q.Author))
                {
                    <li> @quote.Id @quote.Text @quote.DateOfQuote.ToShortDateString() @quote.Author?.Name </li>
                }
            </ul>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>Not Authorized</p>
    </NotAuthorized>
</AuthorizeView>
@code {
    private QuoteCreation quoteCreation = new QuoteCreation();
    private AuthorCreation authorCreation = new AuthorCreation();

    private void CreateQuote()
    {
        QuotesContext.Add(new Quote
            {
                Text = quoteCreation.Text,
                AuthorId = quoteCreation.AuthorId.Value,
                DateOfQuote = DateTime.Today,
                Id = Guid.NewGuid(),
            });
        QuotesContext.SaveChanges();
    }

    private void CreateAuthor()
    {
        QuotesContext.Add(new Author
            {
                Id = Guid.NewGuid(),
                Name = authorCreation.Name,
            });
        QuotesContext.SaveChanges();
    }

    public class QuoteCreation
    {
        public string? Text { get; set; }
        public Guid? AuthorId { get; set; }
    }
    public class AuthorCreation
    {
        public string? Name { get; set; }
    }

}